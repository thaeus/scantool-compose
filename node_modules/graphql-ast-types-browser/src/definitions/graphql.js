/* These are auto-generated definitions: Please do not edit this file directly */

import {
  assertNodeType,
  assertValueType,
  assertEach,
  assertOneOf,
  assertArrayOf
} from './index';

export default () => [["Name", {
  builder: ["value"],
  fields: {
    value: {
      optional: false,
      validate: assertValueType("string")
    }
  },
  aliases: ["AST"]
}], ["Document", {
  builder: ["definitions"],
  fields: {
    definitions: {
      optional: false,
      validate: assertArrayOf(assertNodeType("Definition"))
    }
  },
  aliases: ["AST"]
}], ["OperationDefinition", {
  builder: ["operation", "selectionSet", "name", "variableDefinitions", "directives"],
  fields: {
    operation: {
      optional: false,
      validate: assertValueType("string")
    },
    selectionSet: {
      optional: false,
      validate: assertNodeType("SelectionSet")
    },
    name: {
      optional: true,
      validate: assertNodeType("Name")
    },
    variableDefinitions: {
      optional: true,
      validate: assertArrayOf(assertNodeType("VariableDefinition"))
    },
    directives: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Directive"))
    }
  },
  aliases: ["AST", "Definition"]
}], ["VariableDefinition", {
  builder: ["variable", "type", "defaultValue"],
  fields: {
    variable: {
      optional: false,
      validate: assertNodeType("Variable")
    },
    type: {
      optional: false,
      validate: assertNodeType("Type")
    },
    defaultValue: {
      optional: true,
      validate: assertNodeType("Value")
    }
  },
  aliases: ["AST"]
}], ["Variable", {
  builder: ["name"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    }
  },
  aliases: ["AST", "Value"]
}], ["SelectionSet", {
  builder: ["selections"],
  fields: {
    selections: {
      optional: false,
      validate: assertArrayOf(assertNodeType("Selection"))
    }
  },
  aliases: ["AST"]
}], ["Field", {
  builder: ["name", "alias", "arguments", "directives", "selectionSet"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    alias: {
      optional: true,
      validate: assertNodeType("Name")
    },
    arguments: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Argument"))
    },
    directives: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Directive"))
    },
    selectionSet: {
      optional: true,
      validate: assertNodeType("SelectionSet")
    }
  },
  aliases: ["AST", "Selection"]
}], ["Argument", {
  builder: ["name", "value"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    value: {
      optional: false,
      validate: assertNodeType("Value")
    }
  },
  aliases: ["AST"]
}], ["FragmentSpread", {
  builder: ["name", "directives"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    directives: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Directive"))
    }
  },
  aliases: ["AST", "Selection"]
}], ["InlineFragment", {
  builder: ["selectionSet", "typeCondition", "directives"],
  fields: {
    selectionSet: {
      optional: false,
      validate: assertNodeType("SelectionSet")
    },
    typeCondition: {
      optional: true,
      validate: assertNodeType("NamedType")
    },
    directives: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Directive"))
    }
  },
  aliases: ["AST", "Selection"]
}], ["FragmentDefinition", {
  builder: ["name", "typeCondition", "selectionSet", "directives"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    typeCondition: {
      optional: false,
      validate: assertNodeType("NamedType")
    },
    selectionSet: {
      optional: false,
      validate: assertNodeType("SelectionSet")
    },
    directives: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Directive"))
    }
  },
  aliases: ["AST", "Definition"]
}], ["IntValue", {
  builder: ["value"],
  fields: {
    value: {
      optional: false,
      validate: assertValueType("string")
    }
  },
  aliases: ["AST", "Value"]
}], ["FloatValue", {
  builder: ["value"],
  fields: {
    value: {
      optional: false,
      validate: assertValueType("string")
    }
  },
  aliases: ["AST", "Value"]
}], ["StringValue", {
  builder: ["value"],
  fields: {
    value: {
      optional: false,
      validate: assertValueType("string")
    }
  },
  aliases: ["AST", "Value"]
}], ["BooleanValue", {
  builder: ["value"],
  fields: {
    value: {
      optional: false,
      validate: assertValueType("boolean")
    }
  },
  aliases: ["AST", "Value"]
}], ["NullValue", {
  builder: [],
  fields: {},
  aliases: ["AST", "Value"]
}], ["EnumValue", {
  builder: ["value"],
  fields: {
    value: {
      optional: false,
      validate: assertValueType("string")
    }
  },
  aliases: ["AST", "Value"]
}], ["ListValue", {
  builder: ["values"],
  fields: {
    values: {
      optional: false,
      validate: assertArrayOf(assertNodeType("Value"))
    }
  },
  aliases: ["AST", "Value"]
}], ["ObjectValue", {
  builder: ["fields"],
  fields: {
    fields: {
      optional: false,
      validate: assertArrayOf(assertNodeType("ObjectField"))
    }
  },
  aliases: ["AST", "Value"]
}], ["ObjectField", {
  builder: ["name", "value"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    value: {
      optional: false,
      validate: assertNodeType("Value")
    }
  },
  aliases: ["AST"]
}], ["Directive", {
  builder: ["name", "arguments"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    arguments: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Argument"))
    }
  },
  aliases: ["AST"]
}], ["NamedType", {
  builder: ["name"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    }
  },
  aliases: ["AST", "Type"]
}], ["ListType", {
  builder: ["type"],
  fields: {
    type: {
      optional: false,
      validate: assertNodeType("Type")
    }
  },
  aliases: ["AST", "Type"]
}], ["NonNullType", {
  builder: ["type"],
  fields: {
    type: {
      optional: false,
      validate: assertOneOf("NamedType", "ListType")
    }
  },
  aliases: ["AST", "Type"]
}], ["SchemaDefinition", {
  builder: ["directives", "operationTypes"],
  fields: {
    directives: {
      optional: false,
      validate: assertArrayOf(assertNodeType("Directive"))
    },
    operationTypes: {
      optional: false,
      validate: assertArrayOf(assertNodeType("OperationTypeDefinition"))
    }
  },
  aliases: ["AST", "TypeSystemDefinition"]
}], ["OperationTypeDefinition", {
  builder: ["operation", "type"],
  fields: {
    operation: {
      optional: false,
      validate: assertValueType("string")
    },
    type: {
      optional: false,
      validate: assertNodeType("NamedType")
    }
  },
  aliases: ["AST"]
}], ["ScalarTypeDefinition", {
  builder: ["name", "directives"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    directives: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Directive"))
    }
  },
  aliases: ["AST", "TypeDefinition"]
}], ["ObjectTypeDefinition", {
  builder: ["name", "fields", "interfaces", "directives"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    fields: {
      optional: false,
      validate: assertArrayOf(assertNodeType("FieldDefinition"))
    },
    interfaces: {
      optional: true,
      validate: assertArrayOf(assertNodeType("NamedType"))
    },
    directives: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Directive"))
    }
  },
  aliases: ["AST", "TypeDefinition"]
}], ["FieldDefinition", {
  builder: ["name", "arguments", "type", "directives"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    arguments: {
      optional: false,
      validate: assertArrayOf(assertNodeType("InputValueDefinition"))
    },
    type: {
      optional: false,
      validate: assertNodeType("Type")
    },
    directives: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Directive"))
    }
  },
  aliases: ["AST"]
}], ["InputValueDefinition", {
  builder: ["name", "type", "defaultValue", "directives"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    type: {
      optional: false,
      validate: assertNodeType("Type")
    },
    defaultValue: {
      optional: true,
      validate: assertNodeType("Value")
    },
    directives: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Directive"))
    }
  },
  aliases: ["AST"]
}], ["InterfaceTypeDefinition", {
  builder: ["name", "fields", "directives"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    fields: {
      optional: false,
      validate: assertArrayOf(assertNodeType("FieldDefinition"))
    },
    directives: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Directive"))
    }
  },
  aliases: ["AST", "TypeDefinition"]
}], ["UnionTypeDefinition", {
  builder: ["name", "types", "directives"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    types: {
      optional: false,
      validate: assertArrayOf(assertNodeType("NamedType"))
    },
    directives: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Directive"))
    }
  },
  aliases: ["AST", "TypeDefinition"]
}], ["EnumTypeDefinition", {
  builder: ["name", "values", "directives"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    values: {
      optional: false,
      validate: assertArrayOf(assertNodeType("EnumValueDefinition"))
    },
    directives: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Directive"))
    }
  },
  aliases: ["AST", "TypeDefinition"]
}], ["EnumValueDefinition", {
  builder: ["name", "directives"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    directives: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Directive"))
    }
  },
  aliases: ["AST"]
}], ["InputObjectTypeDefinition", {
  builder: ["name", "fields", "directives"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    fields: {
      optional: false,
      validate: assertArrayOf(assertNodeType("InputValueDefinition"))
    },
    directives: {
      optional: true,
      validate: assertArrayOf(assertNodeType("Directive"))
    }
  },
  aliases: ["AST", "TypeDefinition"]
}], ["TypeExtensionDefinition", {
  builder: ["definition"],
  fields: {
    definition: {
      optional: false,
      validate: assertNodeType("ObjectTypeDefinition")
    }
  },
  aliases: ["AST", "TypeSystemDefinition"]
}], ["DirectiveDefinition", {
  builder: ["name", "locations", "arguments"],
  fields: {
    name: {
      optional: false,
      validate: assertNodeType("Name")
    },
    locations: {
      optional: false,
      validate: assertArrayOf(assertNodeType("Name"))
    },
    arguments: {
      optional: true,
      validate: assertArrayOf(assertNodeType("InputValueDefinition"))
    }
  },
  aliases: ["AST", "TypeSystemDefinition"]
}]];